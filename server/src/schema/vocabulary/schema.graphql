type Vocabulary {
  id: ID!
  word: String!
  meaning: String!
  example: String
  languageName: String!
  createdAt: DateTime!
  updatedAt: DateTime!

  storyId: ID
  userId: ID!
}

scalar DateTime

extend type Query {
  vocabularies: [Vocabulary!]!
  vocabulary(id: ID!): Vocabulary
}

# type VocabularyResponse {
#   success: Boolean!
#   message: String
#   vocabulary: Vocabulary
# }

# extend type Mutation {
#   createVocabulary(word: String!, meaning: String!, example: String, languageName: String!, userId: ID!): VocabularyResponse
#   updateVocabulary(id: ID!, word: String, meaning: String, example: String, languageName: String, userId: ID): VocabularyResponse
#   deleteVocabulary(id: ID!): VocabularyResponse
# }