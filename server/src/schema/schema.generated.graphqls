input CreateWorksheetInput {
  content: String!
  languageName: String!
}

scalar DateTime

type Language {
  code: String!
  id: ID!
  name: String!
  stories: [Story!]
  users: [User!]
  vocabularies: [Vocabulary!]
  worksheets: [Worksheet!]
}

type Mutation {
  createLanguage(code: String!, name: String!): Language!
  createStory(content: String!, description: String!, difficulty: Int!, languageName: String!, tags: [String!]!): Story!
  createTag(name: String!): Tag!
  createUser(languages: [String!]!, username: String!): User!
  createVocabulary(example: String, languageName: String!, meaning: String!, word: String!): Vocabulary!
  createWorksheet(input: CreateWorksheetInput!): Worksheet!
  deleteLanguage(id: ID!): Language
  deleteStory(id: ID!): Story
  deleteTag(id: ID!): Tag
  deleteUser(id: ID!): User
  deleteVocabulary(id: ID!): Vocabulary
  deleteWorksheet(id: Int!): Boolean!
  updateLanguage(code: String, id: ID!, name: String): Language!
  updateStory(content: String, description: String, difficulty: Int, id: ID!, languageName: String, tags: [String!]!): Story!
  updateTag(id: ID!, name: String): Tag!
  updateUser(id: ID!, username: String): User!
  updateVocabulary(example: String, id: ID!, languageName: String, meaning: String, word: String): Vocabulary!
  updateWorksheet(id: Int!, input: UpdateWorksheetInput!): Worksheet!
}

type Query {
  language(id: ID!): Language
  languageByName(name: String!): Language
  languages: [Language!]!
  stories: [Story!]!
  story(id: ID!): Story
  tag(id: ID!): Tag
  tags: [Tag!]!
  user(userId: ID!): User
  users: [User!]
  vocabularies: [Vocabulary!]!
  vocabulary(id: ID!): Vocabulary
  worksheet(id: ID!): Worksheet
  worksheets: [Worksheet!]!
}

type Story {
  audioUrl: String
  averageRating: Float
  completedAt: DateTime
  content: String!
  createdAt: DateTime!
  description: String!
  difficulty: Int!
  id: ID!
  imageUrl: String
  isPublished: Boolean!
  isReviewed: Boolean!
  language: Language!
  readCount: Int!
  startedAt: DateTime
  tags: [Tag!]!
  updatedAt: DateTime!
  user: User!
  vocabularies: [Vocabulary!]!
}

type Tag {
  createdAt: DateTime!
  id: ID!
  name: String!
  stories: [Story!]!
  updatedAt: DateTime!
}

input UpdateWorksheetInput {
  content: String
  languageName: String
}

type User {
  createdAt: DateTime!
  email: String!
  languages: [Language!]!
  stories: [Story!]!
  updatedAt: DateTime!
  userId: ID!
  username: String!
  vocabularies: [Vocabulary!]!
  worksheets: [Worksheet!]!
}

type Vocabulary {
  createdAt: DateTime!
  example: String
  id: ID!
  language: Language!
  meaning: String!
  story: Story
  updatedAt: DateTime!
  user: User!
  word: String!
}

type Worksheet {
  completedAt: DateTime
  content: String!
  createdAt: DateTime!
  id: ID!
  language: Language!
  updatedAt: DateTime!
  user: User!
}