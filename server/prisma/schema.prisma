generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DEV_DATABASE_URL")
}

model User {
  id           Int            @id @default(autoincrement())
  email        String         @unique
  username     String         @unique
  createdAt    DateTime       @default(now()) @db.Timestamptz(3)
  updatedAt    DateTime       @updatedAt @db.Timestamptz(3)
  languages    UserLanguage[]
  vocabularies Vocabulary[]
  stories      Story[]
  worksheets   Worksheet[]
}

model UserLanguage {
  userId       Int
  languageName String
  user         User     @relation(fields: [userId], references: [id])
  language     Language @relation(fields: [languageName], references: [name])

  @@id([userId, languageName])
}

model Language {
  id           Int            @id @default(autoincrement())
  name         String         @unique
  vocabularies Vocabulary[]
  stories      Story[]
  worksheets   Worksheet[]
  users        UserLanguage[]
}

model Vocabulary {
  id           Int      @id @default(autoincrement())
  word         String
  meaning      String
  example      String?
  userId       Int
  user         User     @relation(fields: [userId], references: [id])
  languageName String
  language     Language @relation(fields: [languageName], references: [name])
  createdAt    DateTime @default(now()) @db.Timestamptz(3)
  updatedAt    DateTime @updatedAt @db.Timestamptz(3)
  Story        Story?   @relation(fields: [storyId], references: [id])
  storyId      Int?
}

model Story {
  id           Int          @id @default(autoincrement())
  content      String
  userId       Int
  user         User         @relation(fields: [userId], references: [id])
  languageName String
  language     Language     @relation(fields: [languageName], references: [name])
  vocabularies Vocabulary[]
  completedAt  DateTime?    @db.Timestamptz(3)
  createdAt    DateTime     @default(now()) @db.Timestamptz(3)
  updatedAt    DateTime     @updatedAt @db.Timestamptz(3)
}

model Worksheet {
  id           Int       @id @default(autoincrement())
  content      String
  userId       Int
  user         User      @relation(fields: [userId], references: [id])
  languageName String
  language     Language  @relation(fields: [languageName], references: [name])
  completedAt  DateTime? @db.Timestamptz(3)
  createdAt    DateTime  @default(now()) @db.Timestamptz(3)
  updatedAt    DateTime  @updatedAt @db.Timestamptz(3)
}
