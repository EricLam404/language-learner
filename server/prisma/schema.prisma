generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int            @id @default(autoincrement())
  email        String         @unique
  username     String         @unique
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  languages    UserLanguage[]
  vocabularies Vocabulary[]
  stories      Story[]
  worksheets   Worksheet[]
  Progress     Progress[]
}

model UserLanguage {
  userId       Int
  languageName String
  user         User     @relation(fields: [userId], references: [id])
  language     Language @relation(fields: [languageName], references: [name])

  @@id([userId, languageName])
}

model Language {
  id           Int            @id @default(autoincrement())
  name         String         @unique
  vocabularies Vocabulary[]
  stories      Story[]
  worksheets   Worksheet[]
  Progress     Progress[]
  users        UserLanguage[]
}

model Vocabulary {
  id           Int      @id @default(autoincrement())
  word         String
  meaning      String
  example      String?
  userId       Int
  user         User     @relation(fields: [userId], references: [id])
  languageName String
  language     Language @relation(fields: [languageName], references: [name])
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  Story        Story?   @relation(fields: [storyId], references: [id])
  storyId      Int?
}

model Story {
  id           Int          @id @default(autoincrement())
  content      String
  userId       Int
  user         User         @relation(fields: [userId], references: [id])
  languageName String
  language     Language     @relation(fields: [languageName], references: [name])
  vocabularies Vocabulary[]
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt
}

model Worksheet {
  id           Int      @id @default(autoincrement())
  content      String
  userId       Int
  user         User     @relation(fields: [userId], references: [id])
  languageName String
  language     Language @relation(fields: [languageName], references: [name])
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model Progress {
  id           Int          @id @default(autoincrement())
  userId       Int
  user         User         @relation(fields: [userId], references: [id])
  languageName String
  language     Language     @relation(fields: [languageName], references: [name])
  completedAt  DateTime
  type         ProgressType
}

enum ProgressType {
  VOCABULARY
  STORY
  WORKSHEET
}
