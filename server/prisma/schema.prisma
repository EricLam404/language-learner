generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DEV_DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  userId       String         @id @unique @db.Uuid
  email        String         @unique
  username     String         @unique
  createdAt    DateTime       @default(now()) @db.Timestamptz(3)
  updatedAt    DateTime       @updatedAt @db.Timestamptz(3)
  languages    Language[]
  vocabularies Vocabulary[]
  stories      Story[]
  worksheets   Worksheet[]
}


model Language {
  id           Int            @id @default(autoincrement())
  name         String         @unique
  code         String         @unique
  vocabularies Vocabulary[]
  stories      Story[]
  worksheets   Worksheet[]
  users        User[]
}

model Vocabulary {
  id           Int      @id @default(autoincrement())
  word         String
  meaning      String
  example      String?
  userId       String   @db.Uuid
  user         User     @relation(fields: [userId], references: [userId])
  languageName String
  language     Language @relation(fields: [languageName], references: [name])
  createdAt    DateTime @default(now()) @db.Timestamptz(3)
  updatedAt    DateTime @updatedAt @db.Timestamptz(3)
  storyId      Int?
  Story        Story?   @relation(fields: [storyId], references: [id])
}

model Story {
  id            Int          @id @default(autoincrement())
  description   String
  content       String
  difficulty    Int
  readCount     Int
  audioUrl      String?
  imageUrl      String?
  averageRating Float?
  isPublished   Boolean      @default(false)
  isReviewed    Boolean      @default(false)
  vocabularies  Vocabulary[]
  userId        String       @db.Uuid
  user          User         @relation(fields: [userId], references: [userId])
  languageName  String
  language      Language     @relation(fields: [languageName], references: [name])
  startedAt     DateTime?    @db.Timestamptz(3)
  completedAt   DateTime?    @db.Timestamptz(3)
  createdAt     DateTime     @default(now()) @db.Timestamptz(3)
  updatedAt     DateTime     @updatedAt @db.Timestamptz(3)
  tags          Tag[]
}

model Tag {
  id        Int       @id @default(autoincrement())
  name      String    @unique
  stories   Story[]   
  createdAt DateTime  @default(now()) @db.Timestamptz(3)
  updatedAt DateTime  @updatedAt @db.Timestamptz(3)
}

model Worksheet {
  id           Int       @id @default(autoincrement())
  content      String
  userId       String    @db.Uuid
  user         User      @relation(fields: [userId], references: [userId])
  languageName String
  language     Language  @relation(fields: [languageName], references: [name])
  completedAt  DateTime? @db.Timestamptz(3)
  createdAt    DateTime  @default(now()) @db.Timestamptz(3)
  updatedAt    DateTime  @updatedAt @db.Timestamptz(3)
}
